# Source: https://www.mdsec.co.uk/2020/03/offensive-development-with-github-actions/
name: Build

# we need to check out our repo, including the submodules, 
# restore any packages we need and then execute MSBuild in release mode.
# We’ll set this up to happen every time there’s a push made to the repo
on: [push]
jobs:
  build:
    # For this build, as we’re targeting .NET code, we are using a windows container
    runs-on: windows-latest
    steps:
      #  checks out our repo
      - uses: actions/checkout@v2
      
      # restore our submodules. This command is a bit more complicated, 
      # but all that’s happening is we drop into a shell and run a git command directly.
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          # git config --global url."https://github.com/".insteadOf "git@github.com:"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      # we grab a setup-nuget action, which allows us to run nuget restore against SharpHound3. 
      - name: Setup Nuget.exe
        uses: nuget/setup-nuget@v1

      #####
      # SharpHound3
      #####
      # This command fetches the dependences required to build SharpHound.
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SharpHound3\SharpHound3.sln
        
      # we call MSBuild via the shell, passing in the path to the SharpHound csproj file 
      # and specifying a release build. This runs MSBuild, which drops the compiled EXE 
      # to disk in our container.    
      - name: Build SharpHound3
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\SharpHound3\SharpHound3\SharpHound3.csproj /property:Configuration=Release
      
      # To access the compiled artefact, we need to upload it. This makes it available from 
      # the GitHub UI, and via the Actions API. Without this step, the artefact would be destroyed 
      # along with the build container.
      - uses: actions/upload-artifact@master
        with:
          name: SharpHound3
          path: SharpHound3\SharpHound3\bin\Release\SharpHound.exe
      
      #####
      # Rubeus
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SharpHound3\SharpHound3.sln
        
      - name: Build Rubeus
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\Rubeus\Rubeus\Rubeus.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: Rubeus
          path: Rubeus\Rubeus\bin\Release\Rubeus.exe
          
      #####
      # SafetyKatz
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SafetyKatz\SafetyKatz.sln
        
      - name: Build SafetyKatz
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\SafetyKatz\SafetyKatz\SafetyKatz.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: SafetyKatz
          path: SafetyKatz\SafetyKatz\bin\Release\SafetyKatz.exe
          
      #####
      # Seatbelt
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\Seatbelt\Seatbelt.sln
        
      - name: Build Seatbelt
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\Seatbelt\Seatbelt\Seatbelt.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: Seatbelt
          path: Seatbelt\Seatbelt\bin\Release\Seatbelt.exe
          
      #####
      # SharpBlock
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SharpBlock\SharpBlock.sln
        
      - name: Build SharpBlock
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\SharpBlock\SharpBlock.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: SharpBlock
          path: SharpBlock\bin\Release\SharpBlock.exe
          
      #####
      # SharpDump
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SharpDump\SharpDump.sln
        
      - name: Build SharpDump
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\SharpDump\SharpDump\SharpDump.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: SharpDump
          path: SharpDump\SharpDump\bin\Release\SharpDump.exe
          
          
      #####
      # SharpUp
      #####
      - name: Nuget Restore
        run: nuget restore $Env:GITHUB_WORKSPACE\SharpUp\SharpUp.sln
        
      - name: Build SharpUp
        run: |
          cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\SharpUp\SharpUp\SharpUp.csproj /property:Configuration=Release
      
      - uses: actions/upload-artifact@master
        with:
          name: SharpUp
          path: SharpUp\SharpUp\bin\Release\SharpUp.exe
